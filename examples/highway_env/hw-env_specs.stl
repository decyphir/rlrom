signal action, ego_presence, ego_x, ego_y, ego_vx, ego_vy, 
       car1_presence, car1_x, car1_y, car1_vx, car1_vy, 
       car2_presence, car2_x, car2_y, car2_vx, car2_vy, 
       car3_presence, car3_x, car3_y, car3_vx, car3_vy, 
       reward

# Speed formulas
ego_moves := ego_vx[t] > 0 # used for evaluation
ego_slow  := ego_vx[t] < 22
ego_fast  := ego_vx[t] > 25

# Danger formmulas
car1_same_lane  := abs(car1_y[t]) < 0.1  
car1_too_close := abs(car1_x[t]) < 0.1 
car1_danger := car1_same_lane and car1_too_close

car2_same_lane  := abs(car2_y[t]) < 0.1
car2_too_close  := abs(car2_x[t]) < 0.1 
car2_danger := car2_same_lane and car2_too_close

car3_same_lane  := abs(car3_y[t]) < 0.1
car3_too_close  := abs(car3_x[t]) < 0.1 
car3_danger := car3_same_lane and car3_too_close

danger := car1_danger or car2_danger or car3_danger

# Right lane formulas
ego_right_lane := ego_y[t] > 0.6
  
# There is a car on the left 
car1_left := car1_y[t] > -.35 and car1_y[t] < -.15 and car1_too_close
car2_left := car2_y[t] > -.35 and car2_y[t] < -.15 and car2_too_close
car3_left := car3_y[t] > -.35 and car3_y[t] < -.15 and car3_too_close
car_left := car1_left or car2_left or car3_left

# Full episode formulas

phi_speed := alw_[0,50] ev_[0,10] ego_fast 
phi_right_lane := alw_[0,50] ev_[0,10] ego_right_lane
phi_car_left := alw_[0,50] ev_[0,10] (not car_left)
